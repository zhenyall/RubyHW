puts "Дан целочисленный массив. Необходимо вывести вначале его элементы с четными индексами, а затем - с нечетными."
array = [1, 2, 3, 4, 5, 6, 7, 8]
array.select.each_with_index { |_,index| index.even?} + array.select.each_with_index { |_,index| index.odd?}
'_________________________________________________'

puts 'Дан целочисленный массив. Необходимо вывести вначале его элементы с нечетными индексами, а затем - четными.'
array = [1, 2, 3, 4, 5, 6, 7, 8]
array.select.each_with_index { |_,index| index.odd?} + array.select.each_with_index { |_,index| index.even?}
'_________________________________________________'

puts 'Дан целочисленный массив. Заменить все положительные элементы на значение минимального.'
array = [1, -2, 6, -3, 7, -5, 8, -4]
min = array.min
array.map! {|x| x>0? min: x}
'_________________________________________________'

puts 'Дан целочисленный массив. Заменить все положительные элементы на значение максимального.'
array = [1, -2, 6, -3, 7, -5, 8, -4]
max = array.max
array.map! {|x| x>0? max: x}	
'_________________________________________________'

puts 'Дан целочисленный массив. Заменить все отрицательные элементы на значение минимального.'
array = [1, -2, 6, -3, 7, -5, 8, -4]
min = array.min
array.map! {|x| x<0? min: x}
'_________________________________________________'

puts 'Дан целочисленный массив. Заменить все отрицательные элементы на значение максимального.'
array = [1, -2, 6, -3, 7, -5, 8, -4]
max = array.max
array.map! {|x| x<0? max: x}
'_________________________________________________'

puts 'Дан целочисленный массив. Упорядочить его по возрастанию.'
array = [3, 8, 1, 5, 2, 9]
array.sort {|x, y| x<=>y}
'_________________________________________________'

puts 'Дан целочисленный массив. Упорядочить его по убыванию.'
array = [3, 8, 1, 5, 2, 9]
array.sort {|x, y| y<=>x}
'_________________________________________________'

puts 'Дан целочисленный массив. Найти индекс минимального элемента.'
array = [3, -2, 1, -6, 4, -5]
array.index(array.min)
'_________________________________________________'
puts 'Дан целочисленный массив. Найти индекс максимального элемента.'
array = [6, -3, 2, -5, 9, -4]
array.index(array.max)
'_________________________________________________'

puts 'Дан целочисленный массив. Найти минимальный четный элемент.'
array = [2, -4, 9, -8, 5, -1]
array.select {|x| x.even?}. min
'_________________________________________________'

puts 'Дан целочисленный массив. Найти максимальный нечетный элемент.'
array = [-3, 2, -7, 9, -4, 6]
array.select {|x| x.odd?}. max 
'_________________________________________________'

puts 'Дан целочисленный массив. Осуществить циклический сдвиг элементов массива влево на одну позицию.'
array = [2, -4, 9, -8, 5, -1]
array.push(array.shift) or array.rotate(1)
'_________________________________________________'

puts 'Дан целочисленный массив. Осуществить циклический сдвиг элементов массива вправо на одну позицию.'
array = [2, -4, 9, -8, 5, -1]
array.rotate(5)
'_________________________________________________'

puts 'Дан целочисленный массив. Вывести номер первого из тех его элементов, которые удовлетворяют двойному неравенству: A[0] < A[i] < A[-1]. Если таких элементов нет, то вывести [ ].'
array = [3, -5, 2, -8, 4, -1]
array.index {|index| array[0] < index && index < array[-1]} || []
'_________________________________________________'

puts 'Дан целочисленный массив. Найти количество элементов, расположенных после последнего максимального.'
array = [2, 5, 8, 1, 4, 12, 6, 1]
array.reverse.index(array.max)
'_________________________________________________'

puts 'Дан целочисленный массив. Найти количество элементов, расположенных после последнего минимального '
array = [2, 5, 8, 1, 4, 12, 6, 1]
array.reverse.index(array.min)
'_________________________________________________'

puts 'Дан целочисленный массив. Найти количество его локальных максимумов.'
array = [6, 2, 8, 4, 9, 1, 5, 9, 2, 8]
p (1...array.size-1).select{ |x| (array[x] > array[x-1])&
&(array[x] > array[x+1]) }.size
'_________________________________________________'

puts 'Дан целочисленный массив. Найти количество минимальных элементов.'
array = [1, 4, 5, 1, 2, 2, 1, 8, 1, 2, 6]
array.count { |index| index == array.min}
'_________________________________________________'

puts 'Дан целочисленный массив. Найти количество максимальных элементов.'
array = [2, 8, 7, -5, 1, 8,  7, -6, 8 ]
array.count { |index| index == array.max}
'_________________________________________________'

puts 'Дан целочисленный массив. Вывести индексы массива в том порядке, в котором соответствующие им элементы образуют убывающую последовательность'
array = [3, -5, 2, -8, 4, -1]
(0...array.size).sort.by{ |index| array[index] }.reverse
'_________________________________________________'

puts 'Дан целочисленный массив. Вывести индексы массива в том порядке, в котором соответствующие им элементы образуют возрастающую последовательность.'
array = [3, -5, 2, -8, 4, -1]
(0...array.size).sort.by{ |index| array[index] }
'_________________________________________________'

puts 'Дан целочисленный массив. Найти количество его локальных минимумов.'
array = [6, 2, 8, 4, 9, 1, 5, 9, 2, 8]
p (1...array.size-1).select{ |x| (array[x] < array[x-1])&
&(array[x] < array[x+1]) }.size
'_________________________________________________'

puts 'Дано число А и натуральное число N. Найти результат следующего выражения 1 + А + А*2 + А*3 + … + А*N.'
A,N = 7, 13
p (1..N).inject(1){ |s,index| s+A*index}
'_________________________________________________'

puts 'Дан целочисленный массив. Найти количество четных элементов.'
array = [3, 5, 1, 7, 3, 8, 9, 4, 1]
array.select {|index| index.even? }.size
'_________________________________________________'

puts 'Дан целочисленный массив. Проверить, чередуются ли в нем положительные и отрицательные числа.'
array = [2, -4, 1, 2, -5, 7, 8, -6]
(0..array.size-2).all?{ |x| (array[x] * array[x+1]) <0 }
'_________________________________________________'

puts 'Дано число А и натуральное число N. Найти результат следующего выражения 1 - А + А*2 - А*3 + … + ((-1)**N)*А*N.'
array = [5, 2, -1, 3, -6, 7, -8]
(1..N).inject(1+A+A*2-A*3){ |sum, index| sum + (-1**index)*A*in
dex }
'_________________________________________________'

puts 'Дано вещественное число R и массив вещественных чисел. Найти два элемента массива, сумма которых наиболее близка к данному числу.'																									
array = [2.3, -4.1, 1.7, 2.9, -5.3, 7.8, 8.2, -6.4]
R = 3.0
array.sort_by{|index| (index-R).abs}[0]
'_________________________________________________'

puts 'Дано вещественное число R и массив вещественных чисел. Найти два элемента массива, сумма которых наименее близка к данному числу.'																									
array = [2.3, -4.1, 1.7, 2.9, -5.3, 7.8, 8.2, -6.4]
R = 3.0
array.sort_by{|index| (index-R).abs}[6]
'_________________________________________________'

puts 'Дан целочисленный массив. Вывести вначале все его четные элементы, а затем - нечетные.'
array = [2, 4, 6, 1, 9, 5, 3, 8]
size = (0..array.size-1).to_a
size.partition{ |index| index [0].zero? }.flatten.map{ |index| 
array[index] }
'_________________________________________________'

puts 'Дан целочисленный массив. Найти среднее арифметическое модулей его элементов.'
array = [4, 2, 8, 4, 1, 9, 6, 2]
(array.inject(0){ |sum, index| sum + index.abs}.to_f)/array.size
'_________________________________________________'

puts 'Дан целочисленный массив. Найти минимальный нечетный элемент.'
array = [2, -4, 9, -8, 5, -1]
array.select {|x| x.odd?}. min
'_________________________________________________'

puts 'Дан целочисленный массив. Найти максимальный четный элемент.'
array = [2, -4, 9, -8, 5, -1]
array.select {|x| x.even?}. max
'_________________________________________________'

puts 'Дан целочисленный массив. Удалить все элементы, встречающиеся ровно три раза.'
array = [2, 3, 5, 9, 4, 5, 2, 8, 5]
skip_elements = array.uniq.select do |value|
  array.count(value) == 3
end

skip_elements.each do |value|
  array.delete(value)
end
array #Для проверки
'_________________________________________________'

puts 'Дан целочисленный массив. Удалить все элементы, встречающиеся ровно три раза.'
array = [2, 3, 5, 9, 4, 5, 2, 8, 5]
skip_elements = array.uniq.select do |value|
  array.count(value) == 2
end

skip_elements.each do |value|
  array.delete(value)
end
'_________________________________________________'

puts 'Дан целочисленный массив. Найти количество элементов, между первым и последним минимальным.'
array = [2, 1, 1, 5, 1, 2, 7]
a = array.index(array.min)
b = array.index(array.min)
array[a+1..b].size
'_________________________________________________'

puts 'Дан целочисленный массив. Найти количество элементов, между первым и последним максимальным.'
array = [6, 0, 3, 1, 0, 9, 1]
a = array.index(array.max)
b = array.index(array.max)
array[a+1..b].size
'_________________________________________________'

puts 'Дан целочисленный массив. Найти все четные элементы.'
array = [3, 5, 1, 6, 9, 4, 2, 7]
array.each_with_index {|each, index| puts each if index%2 == 0}
'_________________________________________________'

puts 'Дан целочисленный массив. Найти все нечетные элементы.'
array = [3, 5, 1, 6, 9, 4, 2, 7]
array.each_with_index {|each, index| puts each if index%2 != 0}	
'_________________________________________________'

puts 'Дан целочисленный массив. Вывести индексы элементов, которые меньше своего левого соседа, и количество таких чисел.'
array = [3, 1, 4, 6, 7, 2, 8, 1]
temp = (1...array.size).select{ |x| array[x] < array[x-1] }
puts temp, temp.size
'_________________________________________________'

puts 'Дан целочисленный массив. Найти количество элементов, расположенных перед первым минимальным.'
array = [5, 4, 1, 32, 2, 7, 0, 32, 6, 0]
a = array.index(array.min)
array[0...a].count
'_________________________________________________'

puts 'Дан целочисленный массив. Найти количество элементов, расположенных перед первым максимальным.'
array = [5, 4, 1, 32, 2, 7, 0, 32, 6, 0]
a = array.index(array.max)
array[0...a].count
'_________________________________________________'

puts 'Дан целочисленный массив. Найти индекс первого минимального элемента.'
array = [2, 13, 4, 8, 13, 1, 7, 9, 1]
arr.index(array.min)
'_________________________________________________'

puts 'Дан целочисленный массив. Найти индекс первого максимального элемента.'
array = [2, 13, 4, 8, 13, 1, 7, 9, 1]
array.index(array.max)
'_________________________________________________'

puts 'Дан целочисленный массив. Найти индекс последнего минимального элемента.'
array = [2, 13, 4, 8, 13, 1, 7, 9, 1]
array.rindex(array.min)
'_________________________________________________'

puts 'Дан целочисленный массив. Найти индекс последнего максимального элемента.'
array = [2, 13, 4, 8, 13, 1, 7, 9, 1]
array.rindex(array.max) 
'_________________________________________________'

puts 'Дан целочисленный массив. Найти два наибольших элемента.'		
array = [5, 12, 9, 2, 34, 6, 11, 8]
array.max
array.delete(array.max)
array.max
#or
array = [5, 12, 9, 2, 34, 6, 11, 8]
array = arr.sort.uniq
arr.pop 
arr.pop
'_________________________________________________'
puts 'Дан целочисленный массив. Найти два наименьших элемента.'		
array = [5, 12, 9, 2, 34, 6, 11, 8]
array.min
array.delete(arr.min)
array.min
'_________________________________________________'

puts 'Дан целочисленный массив. Найти среднее арифметическое квадратов его элементов.'
array = [7, 2, 5, 1, 8, 10, 6, 4]
array1 = array.map{ |elem| elem ** 2 }
array1.inject{ |sum, elem| sum + elem }.to_f / array1.size
'_________________________________________________'

puts 'Дан целочисленный массив. Найти среднее арифметическое его элементов.'	
array = [2, 13, 4, 8, 13, 1, 7, 9, 1]
arr.inject{ |sum, elem| sum + elem }.to_f / array.size
'_________________________________________________'